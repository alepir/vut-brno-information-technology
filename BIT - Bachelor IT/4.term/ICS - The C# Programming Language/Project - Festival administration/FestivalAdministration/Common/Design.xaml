<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:listViews="clr-namespace:FestivalAdministration.Views.ListViews"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <SolidColorBrush x:Key="WindowBackground" Color="#0F0F0F" />
    <SolidColorBrush x:Key="WindowForeground" Color="#FFF" />

    <SolidColorBrush x:Key="ButtonForeground" Color="#D0FFFFFF"/>

    <SolidColorBrush x:Key="ExitButtonBackground" Color="Red" />
    <SolidColorBrush x:Key="MaxButtonBackground" Color="#FFEEB800" />
    <SolidColorBrush x:Key="MiniButtonBackground" Color="#FF0FB800" />

    <SolidColorBrush x:Key="TabItemBackground" Color="#1C1C1C" />


    <Style TargetType="{x:Type Label}" x:Key="TitleLabel">
        <Setter Property="Foreground" Value="{StaticResource WindowForeground}" />
        <Setter Property="FontSize" Value="44" />
        <Setter Property="FontFamily" Value="Tw Cen MT" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="20" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="WindowBorder">
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="CornerRadius" Value="10" />
    </Style>

    <Style TargetType="{x:Type Window}" x:Key="MainWindow">
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="Foreground" Value="{StaticResource WindowForeground}" />
        <Setter Property="Title" Value="FestivalAdministration" />
        <Setter Property="Height" Value="780" />
        <Setter Property="Width" Value="1320" />
        <Setter Property="MinHeight" Value="500" />
        <Setter Property="MinWidth" Value="850" />
        <Setter Property="WindowStyle" Value="None" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="GenericButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="100" />
        <Setter Property="FontFamily" Value="Tw Cen MT" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="24" />
        <Setter Property="BorderBrush" Value="{StaticResource WindowBackground}" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ExitButton"  BasedOn="{StaticResource GenericButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Content" Value="X" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="35" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Margin" Value="0,0,10,155" />
        <Setter Property="ToolTip" Value="Exit" />
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border CornerRadius="8" Background="{StaticResource ExitButtonBackground}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ResizeButton" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Content" Value="☐" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Margin" Value="0,0,65,155" />
        <Setter Property="FontSize" Value="23" />
        <Setter Property="ToolTip" Value="Resize" />
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border CornerRadius="8" Background="{StaticResource MaxButtonBackground}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MiniButton" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="ToolTip" Value="Minimize" />
        <Setter Property="Content" Value="⚊"/>
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="35" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Margin" Value="0,0,120,155" />
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border CornerRadius="8" Background="{StaticResource MiniButtonBackground}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Image" x:Key="MiniIcon">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <Style TargetType="{x:Type Image}" x:Key="Logo">
        <Setter Property="Height" Value="105" />
        <Setter Property="Width" Value="105" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Background" Value="#000" />
        <Setter Property="BorderBrush" Value="#000" />
        <Setter Property="Foreground" Value="#fff" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#f00" />
                <Setter Property="Foreground" Value="#000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontFamily" Value="Tw Cen MT" />
        <Setter Property="Background" Value="{StaticResource TabItemBackground}" />
        <Setter Property="BorderBrush" Value="#000" />
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="150" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Height" Value="65" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#fff" />
                <Setter Property="Foreground" Value="#000" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#000" />
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="#000" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Margin" Value="20" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AddButton">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="50" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="20,0,0,0" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="ListLabel">
        <Setter Property="Background" Value="#252525" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="68" />
        <Setter Property="FontFamily" Value="Tw Cen MT" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="MainLabel">
        <Setter Property="Background" Value="#00000000"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DetailBtn">
        <Setter Property="Background" Value="#FAFAFA" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="5,15,5,0" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="DetailTextBox">
        <Setter Property="Background" Value="#EF0B00" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="5,5,5,5" />
        <Setter Property="BorderBrush" Value="#252525" />
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="DetailComboBox">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="yellow"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="5,5,5,5" />
        <Setter Property="BorderBrush" Value="#252525" />
    </Style>
    
    <!--<Style TargetType="{x:Type ItemContainerTemplate}"--> 

    <Style TargetType="{x:Type xctk:DateTimePicker}" x:Key="DetailDateTimePickerBox">
        <Setter Property="Background" Value="#EF0B00" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="5,5,5,5" />
        <Setter Property="BorderBrush" Value="#252525" />
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="DetailGrid">
        <Setter Property="Background" Value="#252525" />
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="DetailSideGrid">
        <Setter Property="Background" Value="#151515" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="DetailLabel">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="10,0,5,0" />
    </Style>

    <Style TargetType="listViews:EventListView">
        <Setter Property="Margin" Value="0,0,0,7" />
    </Style>

    <Style TargetType="listViews:StageListView">
        <Setter Property="Margin" Value="0,0,0,7" />
    </Style>
    
    <Style TargetType="listViews:BandsListView">
        <Setter Property="Margin" Value="0,0,0,7" />
    </Style>


<!--add to another file-->

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="red"  SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="black" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="white"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="black"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxDetailView" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="CellHighlighterStyle">
        <Setter Property="DataGridCell.Background">
            <Setter.Value>
                <MultiBinding
                    Converter="{StaticResource DataGridCellConverter}" >
                    <MultiBinding.Bindings>
                        <Binding RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>